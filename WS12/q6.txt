when running without valgrind:

townsag@townsag:~/Desktop/CS149/WS12$ gcc -o q6 q6.c -Wall -Werror
townsag@townsag:~/Desktop/CS149/WS12$ ./q6
-1431353692

when running with valgrind:
townsag@townsag:~/Desktop/CS149/WS12$ valgrind --leak-check=full ./q6
==2431== Memcheck, a memory error detector
==2431== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2431== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2431== Command: ./q6
==2431== 
==2431== Invalid read of size 4
==2431==    at 0x108840: main (in /home/townsag/Desktop/CS149/WS12/q6)
==2431==  Address 0x4a4a040 is 0 bytes inside a block of size 20 free'd
==2431==    at 0x4867AD0: free (in /usr/libexec/valgrind/vgpreload_memcheck-arm64-linux.so)
==2431==    by 0x10883B: main (in /home/townsag/Desktop/CS149/WS12/q6)
==2431==  Block was alloc'd at
==2431==    at 0x4865058: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-arm64-linux.so)
==2431==    by 0x108823: main (in /home/townsag/Desktop/CS149/WS12/q6)
==2431== 
20
==2431== 
==2431== HEAP SUMMARY:
==2431==     in use at exit: 0 bytes in 0 blocks
==2431==   total heap usage: 2 allocs, 2 frees, 1,044 bytes allocated
==2431== 
==2431== All heap blocks were freed -- no leaks are possible
==2431== 
==2431== For lists of detected and suppressed errors, rerun with: -s
==2431== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

It becomes clear that the program is running incorectly when it outputs grbage data
when trying to print from the freed array.

When running using valgrind I am specifically confused because it says that the program
allocated 1044 bytes between two allocs. This is confusing because the program only 
allocs once and should only allocate 20 bytes. 
